import streamlit as st
import pandas as pd
import plotly.express as px

# -------------------------------
# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Dashboard EAD",
    page_icon="üìä",
    layout="wide"
)

st.title("üìä Dashboard EAD - An√°lise de Assuntos")
st.markdown("An√°lise de assuntos extra√≠dos do CSV.")
 
df_ead = pd.read_csv('dados_ead.csv', sep=';')

# Separar coluna 'A√ß√µes,%,Total'
df_colunas = df_ead['A√ß√µes,%,Total'].str.split('|', expand=True).iloc[:, :3]
df_colunas.columns = ['Nome', 'Telefone', 'Assunto']

# Limpar prefixos
df_colunas['Nome'] = df_colunas['Nome'].str.replace('Nome:', '', regex=False).str.strip()
df_colunas['Telefone'] = df_colunas['Telefone'].str.replace('Telefone:', '', regex=False).str.strip()
df_colunas['Assunto'] = df_colunas['Assunto'].str.replace('Assunto:', '', regex=False).str.strip()

# Criar DataFrame limpo
df_limpo = df_colunas.copy()

 category_patterns = {
    # Categoria Atendimento
    'Atendimento Humano': ['falar com atendente','atendente','consultor','quero falar com algu√©m','quero falar com uma pessoa'],
    # Categoria Cola√ß√£o de grau/Conclus√£o de Curso
    'Cola√ß√£o de grau/Conclus√£o de Curso': ['Conclus√£o','conclus√£o','Cola√ß√£o de grau','cola√ß√£o de grau','Terminar','Formatura','Cola√ß√£o','Colacao','colacao','cola√ß√£o','formatura'],
    # Categoria de Ativdades Complementares
    'Atividades Complementares':['Hora','hora','Horas','horas','atividade complementar',' Atividade complementar','Hora complementar','Atividades complementares','atividades complementares'],
    # Categoria De Perguntas sobre o Curso
    'Sobre Curso': ['Meu curso','meu curso','Cursos','data de finaliza√ß√£o','ao curso','Durabilidade do curso', 'finalizo o curso?','finalizar curso', 'sobre o curso','do curso',' coordena√ß√£o do meu curso','Curso'],
    # Categoria De Certificados e Diploma
    'Certificado/Diploma': ['Certificado','certificado', 'diploma','Diploma'],
    # Categoria de Tranferencia
    'Transfer√™ncia': ['transferir','mudar','Sobre mudar de curso','Transfer√™ncia'],
    # Categoria Sobre Hist√≥ricos
    'Hist√≥rico': ['Historico','Historico escolar', 'Hist√≥rico escolar','Hist√≥rico'],
    # Categoria sobre Est√°gio
    'Est√°gio': ['est√°gio', 'est√°gio remunerado','Est√°gio','Estagio','Est√°gio n√£o obrigatorio','Est√°gio obrigatorio','Est√°gio n√£o obrigat√≥rio','Est√°gio obrigat√≥rio','Carreiras','carreiras','est√°gio obrigat√≥rio','estagio obrigatorio','est√°gio n√£o obrigat√≥rio','estagio n√£o obrigatorio'],
    # Categoria Documento
    'Documentos': ['Documento','documento','Documentos','documentos','Documenta√ß√µes','documenta√ß√µes', 'Documenta√ß√£o','documenta√ß√£o','Comprovante','comprovante','atestado m√©dico','atestado de frequ√™ncia','cnpj','atestado de matr√≠cula'],
    # Categoria Dados para serem modificados
    'Dados Cadastrais': ['Dados cadastrais','dados pessoais','Mudan√ßa','Atualizar','altera√ß√£o do meu nome','Data de nascimento','data de nascimento','Altera√ß√£o de nome','Queria atualizar','Atualizar e-mail'],
    # Categoria Dispensas
    'Dispensas': ['eliminar mat√©rias', 'dispensas','Dispensa','dispensa','Dispensas'],
    # Categoria D√∫vidas
    'D√∫vidas': ['tirar d√∫vidas', 'd√∫vidas','d√∫vida','D√∫vida','D√∫vidas','duvidas','duvida','Duvida'],
    # Categoria Matr√≠culas
    'Matr√≠cula': ['gradua√ß√µes','Gradua√ß√£o','Estudo','Matr√≠cula', 'Matr√≠culas', 'matricula','matriculas','Matricula','Matriculas','fazer algum curso','Estudar','minha vaga'],
    # Categoria sobre as Carteirinhas
    'Carteirinha': ['passe escolar','emtu escolar','carteira','Carteira', 'Carteirinha', 'carteirinha','Cart√£o','cart√£o', 'Bilhete escolar','bilhete escolar','bilhete unico','bilhete √∫nico','Bilhete √∫nico','carteira de meia passagem','Cart√£o de meia passagem','Carteira de meia passagem','cart√£o de meia passagem'],
    # Categoria sobre as Provas e as Notas
    'Avalia√ß√£o/Notas': ['M√©dia','Media','media','m√©dia','notas','Notas','nota','Nota','Notas abaixo da m√©dia','m√©dias','Avalia√ß√£o on-line', 'Pontua√ß√£o','provas','prova','Prova','Provas','recupera√ß√£o','Recupera√ß√£o'],
    # Categoria sobre Aulas e H√≥rarios
    'Aulas/Hor√°rios': ['Aula','Aula inaugural','Aulas','aulas','aula online','f√©rias','F√©rias','in√≠cio das aulas','aulas pendentes','come√ßa as aulas'],
    #  Categoria Financeiro/Acordos
    'Financeiro': ['parcelas','Parcelas','parcela','Parcela','cobran√ßa','Cobran√ßa','pend√™ncias','Acordo','acordo','Acordos','acordos','quita√ß√£o','data de vencimento','pagamento','pagamentos','Pagamento','Pagamentos','Boleto','Boletos','boletos','boleto','financeiro','Financeiro','Mensalidade','mensalidade','Contrato','Fatura','fatura','Valores','valores','Consulta de Valores','valores de cursos'],
    # Categoria Contato Geral
    # 'Geral': ['Eu mandei mensagem','ola','Bom dia', 'Boa tarde', 'Boa noite', 'Ol√°', 'Oi', 'tudo bem', 'Gostaria de saber', 'queria saber', 'preciso de ajuda', 'informa√ß√£o', 'ajuda', 'problema', 'quest√£o', 'situa√ß√£o', 'verificar', 'consultar', 'obrigado', 'grato', 'por favor', 'poderia', 'precisa', 'falar', 'atendimento', 'atendente', 'contestar','N√£o','Okk','ok', 'Ok'],
    # Categoria Biblioteca
    'Minha Biblioteca': ['Biblioteca','biblioteca'],
    # Categoria dos Polos
    'Polos': ['Polo','polo','Polos','polos'],
    # Categoria Secret√°ria Geral: Prouni
    'Secret√°ria Geral': ['Prouni','prouni','ProUni','Secretaria','secretaria','Secret√°ria','secret√°ria'],
    # Acesso E-mails
    'Acesso Emais': ['e-mail institucional','email institucional','recebemos esse e-mail','email estranho','E-mail','sobre esses e-mails'],
    # Pacote Office para os alunos
    'Pacote Office': ['Microsoft','pacote office','usar o Word','Pacote','Word'],
    # Categoria Disciplinas e Turmas
    'Disciplinas/Turmas': ['Disciplinas','Disciplina','disciplinas','disciplina','Enturma√ß√µes','Enturma√ß√£o','enturma√ß√£o','enturma√ß√µes','grade curricular','grade','Grade','Grade curricular','Turma','turma','Turmas','turmas'],
    #  Categoria Site
    'Site': ['Site','site'],
    # Categoria An√°lise
    'An√°lise': ['An√°lise','retorno da analise','analises','Retorno an√°lise','An√°lises','analise'],
    # Categoria Suporte
    'Suporte ao Aluno': ['Suporte e Inf. Gerais','Suporte','suporte'],
    # Categoria Bolsas
    'Bolsa': ['analise da bolsa','bolsa','Bolsa'],
    # Categoria Retorno ao Curso
    'Retorno ao Curso': ['Atualiza√ß√£o do meu R A','ativar RA','Atualiza√ß√£o do meu RA','Retorno a gradua√ß√£o hibrida','quero saber se posso voltar','Teria como iniciar novamente o curso','Refazer o curso','Recome√ßar estudos','Reiniciar o curso do in√≠cio','retorno ao curso'],
    # Categoria Ouvidoria
    'Ouvidoria': ['Ouvidoria','ouvidoria'],
    # Bagagens
    'Bagagem': ['bagagem','Bagagem','bagagens'],
    # Jornada Acad√™mica
    'Jornada acad√™mica': ['Jornada acad√™mica','jornada acad√™mica','jornada academica','Jornada Academica','Jornada academica','Jornada Acad√™mica'],
    # Requerimento
    'Requerimento': ['requerimento','Requerimento'],
    # Imagem/Video/Audio
    'img/video': ['{type":"v', '{type":"i','{type":"a'],
    # Categoria Trancar matr√≠cula (Refinado)
    'Trancar matr√≠cula': ['Trancar matr√≠cula', 'Trancar o curso', 'Trancar curso', 'Trancar a faculdade', 'trancar', 'Trancamento','trancamento','Encerrar inscri√ß√£o','Trancar','parar de estudar','tranquei','cancelament','Trancamento de curso','outra institui√ß√£o','troca','trocar','Trocar','Troca',' Tranquei','trancamento do curso','encerrar o curso','cancelamento','Cancelar matricula','cancelar','Cancelamento de matr√≠cula'],
    # Categoria DP/ADAP (Refinado)
    'DP/ADAP': ['DP', 'ADAP', 'dp', 'adap', 'depend√™ncia', 'dependencia'],
    # Categoria Acesso Ava/Aluno online (Refinado)
    'Acesso Ava/Aluno online': ['n√£o consigo logar','n√£o estou conseguindo logar','logar na minha conta','Aluno online','aluno online','acad√™mico','Acad√™mico','academico','Academico','ambienta√ß√£o','Meu login','meu acesso','Ambienta√ß√£o Virtual de Aprendizagem','ambienta√ß√£o','Ambienta√ß√£o','acessar','plataforma','Portal','Senha','Acesso','canva','portal do aluno','acesso','Canvas','login na plataforma','senha do AVA','Ava','ava','AVA', 'acessar o ava', 'acesso', 'acessa','RA','senha do curso', 'aplicativo','Aplicativo','App','app','Senha no aplicativo'],
    # Categoria Material/Conte√∫do (Refinado)
    'Material/Conte√∫do': ['Tarefa','tarefa','Tarefas','tarefas','Prazo','Prazos','prazo','prazos','Atividade','atividades','Atividades','Mat√©rias do curso', 'Mat√©rias', 'materia', 'atividade','Mat√©ria','Envio de trabalho','Exerc√≠cio','Exerc√≠cios','exerc√≠cio','exercicios','exercicio','exerc√≠cio','conte√∫do','Conte√∫do'],
    # Categoria Pr√°tica
    'Pr√°tica Extensionista': ['pr√°tica','Pr√°tica','praticas','PR√ÅTICA EXTENSIONISTA','pr√°ticas extensionistas','Pratica','pratica','Pr√°tica Extensionista'],
    # Categoria Relat√≥rio
    'Relat√≥rio': ['M√°scara de relat√≥rio e libera√ß√£o da pasta star'],
    }

 # Fun√ß√£o para categorizar
def categorize_assunto(assunto):
    if not isinstance(assunto, str):
        return 'Outros'
    assunto_lower = assunto.lower()
    for category, patterns in category_patterns.items():
        for pattern in patterns:
            if pattern.lower() in assunto_lower:
                return category
    return 'Outros'

# Aplicar categoriza√ß√£o
df_limpo['Categoria'] = df_limpo['Assunto'].apply(categorize_assunto)

#--------------------------------------------------------------------------------------------------------------------------------

# --- Barra Lateral (Filtros) ---
 
st.sidebar.header("üîç Filtros")
 
# Filtrar por Categoria
categorias_disponiveis = sorted(df_limpo['Categoria'].unique())
categorias_selecionadas = st.sidebar.multiselect("Categoria", categorias_disponiveis, default=categorias_disponiveis)

# Filtrar por Nome
nomes_disponiveis = sorted(df_limpo['Nome'].unique())
nomes_selecionados = st.sidebar.multiselect("Nome", nomes_disponiveis, default=nomes_disponiveis)

# Aplicar filtros
df_filtrado = df_limpo[
    (df_limpo['Categoria'].isin(categorias_selecionadas)) &
    (df_limpo['Nome'].isin(nomes_selecionados))
]
 
# --- Conte√∫do Principal ---
st.title("üëæDashboard de An√°lise Ancheita!üëæ")
st.markdown("aaaaaaaaaaaaaaaaaaaaaaaah")
 
st.subheader("M√©tricas Principais")

col1, col2, col3 = st.columns(3)
col1.metric("Total de registros", df_filtrado.shape[0])
col2.metric("Categorias √∫nicas", df_filtrado['Categoria'].nunique())
col3.metric("Nomes √∫nicos", df_filtrado['Nome'].nunique())

st.markdown("---")

# Gr√°fico de barras por categoria
grafico_categoria = df_filtrado['Categoria'].value_counts().reset_index()
grafico_categoria.columns = ['Categoria', 'Count']

fig = px.bar(
    grafico_categoria,
    x='Categoria',
    y='Count',
    title='Distribui√ß√£o de Categorias',
    labels={'Categoria':'Categoria', 'Count':'Quantidade'}
)
st.plotly_chart(fig, use_container_width=True)

# Gr√°fico de pizza por categoria
fig_pie = px.pie(
    grafico_categoria,
    names='Categoria',
    values='Count',
    title='Propor√ß√£o por Categoria',
    hole=0.4
)
st.plotly_chart(fig_pie, use_container_width=True)

# Tabela detalhada
st.subheader("Dados Detalhados")
st.dataframe(df_filtrado)
 

#col_graf1, col_graf2 = st.columns(2)
# 
#with col_graf1:
#    if not df_filtrado.empty:
#        top_cargos = df_filtrado.groupby('Categoria')['Count'].mean().nlargest(10).sort_values(ascending=True).reset_index()
#        grafico_cargos = px.bar(
#            top_cargos,
#            x='Categoria',
#            y='Count',
#            orientation='h',
#            title="Distribui√ß√£o de Categorias de Assunto",
#            labels={'Categoria': 'Categoria de Assunto', 'Count': 'N√∫mero de Ocorr√™ncias'}
#        )
#        grafico_cargos.update_layout(title_x=0.1, yaxis={'categoryorder':'total ascending'})
#        st.plotly_chart(grafico_cargos, use_container_width=True)
#    else:
#        st.warning("Nenhum dado para exibir no gr√°fico.")
# 
#with col_graf2:
#    if not df_filtrado.empty:
#        grafico_hist = px.histogram(
#            df_filtrado,
#            x='usd',
#            nbins=30,
#            title="Distribui√ß√£o de sal√°rios anuais",
#            labels={'usd': 'Faixa salarial (USD)', 'count': ''}
#        )
#        grafico_hist.update_layout(title_x=0.1)
#        st.plotly_chart(grafico_hist, use_container_width=True)
#    else:
#        st.warning("Nenhum dado para exibir no gr√°fico de distribui√ß√£o.")
# 
#col_graf3, col_graf4 = st.columns(2)
# 
#with col_graf3:
#    if not df_filtrado.empty:
#        remoto_contagem = df_filtrado['remoto'].value_counts().reset_index()
#        remoto_contagem.columns = ['tipo_trabalho', 'quantidade']
#        grafico_remoto = px.pie(
#            remoto_contagem,
#            names='tipo_trabalho',
#            values='quantidade',
#            title='Propor√ß√£o dos tipos de trabalho',
#            hole=0.5
#        )
#        grafico_remoto.update_traces(textinfo='percent+label')
#        grafico_remoto.update_layout(title_x=0.1)
#        st.plotly_chart(grafico_remoto, use_container_width=True)
#    else:
#        st.warning("Nenhum dado para exibir no gr√°fico dos tipos de trabalho.")
# 
#with col_graf4:
#    if not df_filtrado.empty:
#        df_ds = df_filtrado[df_filtrado['cargo'] == 'Data Scientist']
#        media_ds_pais = df_ds.groupby('residencia_iso3')['usd'].mean().reset_index()
#        grafico_paises = px.choropleth(media_ds_pais,
#            locations='residencia_iso3',
#            color='usd',
#            color_continuous_scale='rdylgn',
#            title='Sal√°rio m√©dio de Cientista de Dados por pa√≠s',
#            labels={'usd': 'Sal√°rio m√©dio (USD)', 'residencia_iso3': 'Pa√≠s'})
#        grafico_paises.update_layout(title_x=0.1)
#        st.plotly_chart(grafico_paises, use_container_width=True)
#    else:
#        st.warning("Nenhum dado para exibir no gr√°fico de pa√≠ses.")
 
# --- Tabela de Dados Detalhados ---
#st.subheader("Dados Detalhados")
#st.dataframe(df_filtrado)
 
